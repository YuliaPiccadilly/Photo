"use strict";function e(t){return e="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},e(t)}function t(e,t,i){return t in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}var i="function"==typeof Symbol&&"symbol"==e(Symbol.iterator)?function(t){return e(t)}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":e(t)};!function(){for(var e=["DocumentType","Element","CharacterData"],t=function(){null!=this.parentNode&&this.parentNode.removeChild(this)},i=0;i<e.length;i++){var n=e[i];window[n]&&!window[n].prototype.remove&&(window[n].prototype.remove=t)}}(),function(e){function t(){}function n(e){if("object"!==i(this))throw new TypeError("Promises must be constructed via new");if("function"!=typeof e)throw new TypeError("not a function");this._state=0,this._handled=!1,this._value=void 0,this._deferreds=[],u(e,this)}function r(e,t){for(;3===e._state;)e=e._value;return 0===e._state?void e._deferreds.push(t):(e._handled=!0,void n._immediateFn((function(){var i=1===e._state?t.onFulfilled:t.onRejected;if(null!==i){var n;try{n=i(e._value)}catch(e){return void a(t.promise,e)}o(t.promise,n)}else(1===e._state?o:a)(t.promise,e._value)})))}function o(e,t){try{if(t===e)throw new TypeError("A promise cannot be resolved with itself.");if(t&&("object"===(void 0===t?"undefined":i(t))||"function"==typeof t)){var r=t.then;if(t instanceof n)return e._state=3,e._value=t,void s(e);if("function"==typeof r)return void u(function(e,t){return function(){e.apply(t,arguments)}}(r,t),e)}e._state=1,e._value=t,s(e)}catch(t){a(e,t)}}function a(e,t){e._state=2,e._value=t,s(e)}function s(e){2===e._state&&0===e._deferreds.length&&n._immediateFn((function(){e._handled||n._unhandledRejectionFn(e._value)}));for(var t=0,i=e._deferreds.length;t<i;t++)r(e,e._deferreds[t]);e._deferreds=null}function l(e,t,i){this.onFulfilled="function"==typeof e?e:null,this.onRejected="function"==typeof t?t:null,this.promise=i}function u(e,t){var i=!1;try{e((function(e){i||(i=!0,o(t,e))}),(function(e){i||(i=!0,a(t,e))}))}catch(e){if(i)return;i=!0,a(t,e)}}var c=setTimeout;n.prototype.catch=function(e){return this.then(null,e)},n.prototype.then=function(e,i){var n=new this.constructor(t);return r(this,new l(e,i,n)),n},n.all=function(e){var t=Array.prototype.slice.call(e);return new n((function(e,n){function r(a,s){try{if(s&&("object"===(void 0===s?"undefined":i(s))||"function"==typeof s)){var l=s.then;if("function"==typeof l)return void l.call(s,(function(e){r(a,e)}),n)}t[a]=s,0==--o&&e(t)}catch(e){n(e)}}if(0===t.length)return e([]);for(var o=t.length,a=0;a<t.length;a++)r(a,t[a])}))},n.resolve=function(e){return e&&"object"===(void 0===e?"undefined":i(e))&&e.constructor===n?e:new n((function(t){t(e)}))},n.reject=function(e){return new n((function(t,i){i(e)}))},n.race=function(e){return new n((function(t,i){for(var n=0,r=e.length;n<r;n++)e[n].then(t,i)}))},n._immediateFn="function"==typeof setImmediate&&function(e){setImmediate(e)}||function(e){c(e,0)},n._unhandledRejectionFn=function(e){"undefined"!=typeof console&&console&&console.warn("Possible Unhandled Promise Rejection:",e)},n._setImmediateFn=function(e){n._immediateFn=e},n._setUnhandledRejectionFn=function(e){n._unhandledRejectionFn=e},"undefined"!=typeof module&&module.exports?module.exports=n:e.Promise||(e.Promise=n)}(window),function(e){e.Promise||(e.Promise=Promise);var n="required",r="email",o="minLength",a="maxLength",s="password",l="phone",u="remote",c="strength",d="function",h=function(e,t){if("string"==typeof e)return e;var i="post"===t.toLowerCase()?"":"?";return Array.isArray(e)?i+e.map((function(e){return e.name+"="+e.value})).join("&"):i+Object.keys(e).map((function(t){return t+"="+e[t]})).join("&")},f=function(e){var t=e.url,i=e.method,n=e.data,r=e.debug,o=e.callback,a=e.error;if(r)o("test");else{var s=!1!==e.async,l=new XMLHttpRequest,u=h(n,"get"),c=null;"post"===i.toLowerCase()&&(c=h(n,"post"),u=""),l.open(i,t+u,s),l.setRequestHeader("Content-Type","application/x-www-form-urlencoded"),l.onreadystatechange=function(){4===this.readyState&&(200===this.status?o(this.responseText):a&&a(this.responseText))},l.send(c)}},m=function(e,t){this.options=t||{},this.rules=this.options.rules||{},this.messages=this.options.messages||void 0,this.colorWrong=this.options.colorWrong||"#B81111",this.result={},this.elements=[],this.tooltip=this.options.tooltip||{},this.tooltipFadeOutTime=this.tooltip.fadeOutTime||5e3,this.tooltipFadeOutClass=this.tooltip.fadeOutClass||"just-validate-tooltip-hide",this.tooltipSelectorWrap=document.querySelectorAll(this.tooltip.selectorWrap).length?document.querySelectorAll(this.tooltip.selectorWrap):document.querySelectorAll(".just-validate-tooltip-container"),this.bindHandlerKeyup=this.handlerKeyup.bind(this),this.submitHandler=this.options.submitHandler||void 0,this.invalidFormCallback=this.options.invalidFormCallback||void 0,this.promisesRemote=[],this.isValidationSuccess=!1,this.focusWrongField=this.options.focusWrongField||!1,this.REGEXP={email:/^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/,zip:/^\d{5}(-\d{4})?$/,phone:/^([0-9]( |-)?)?(\(?[0-9]{3}\)?|[0-9]{3})( |-)?([0-9]{3}( |-)?[0-9]{4}|[a-zA-Z0-9]{7})$/,password:/[^\w\d]*(([0-9]+.*[A-Za-z]+.*)|[A-Za-z]+.*([0-9]+.*))/,strengthPass:/^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)[a-zA-Z\d]/},this.DEFAULT_REMOTE_ERROR="Error",this.state={tooltipsTimer:null},this.setForm(document.querySelector(e))};m.prototype={defaultRules:{email:{required:!0,email:!0},name:{required:!0,minLength:3,maxLength:15},text:{required:!0,maxLength:300,minLength:5},password:{required:!0,password:!0,minLength:4,maxLength:8},zip:{required:!0,zip:!0},phone:{phone:!0}},defaultMessages:{required:"The field is required",email:"Недопустимый формат",maxLength:"Недопустимый формат",minLength:"Недопустимый формат",password:"Password is not valid",remote:"Email already exists",strength:"Password must contents at least one uppercase letter, one lowercase letter and one number",function:"Function returned false"},handlerKeyup:function(e){var t=e.target,i={name:t.getAttribute("data-validate-field"),value:t.value};delete this.result[i.name],this.validateItem({name:i.name,value:i.value,group:[],isKeyupChange:!0}),this.renderErrors()},setterEventListener:function(e,t,i,n){switch("keyup"===t&&(i=this.bindHandlerKeyup),n){case"add":e.addEventListener(t,i);break;case"remove":e.removeEventListener(t,i)}},getElementsRealValue:function(){for(var e=this.$form.querySelectorAll("*"),t=void 0,i={},n=0,r=e.length;n<r;++n)if(t=e[n].getAttribute("name")){if("checkbox"===e[n].type){i[t]=e[n].checked;continue}i[t]=e[n].value}return i},validationFailed:function(){this.invalidFormCallback&&this.invalidFormCallback(this.result);var e=document.querySelector(".js-validate-error-field");this.focusWrongField&&e&&e.focus&&e.focus()},validationSuccess:function(){if(0===Object.keys(this.result).length){if(this.isValidationSuccess=!1,this.submitHandler){var e=this.getElementsRealValue();return void this.submitHandler(this.$form,e,f)}this.$form.submit()}},setForm:function(e){var t=this;this.$form=e,this.$form.setAttribute("novalidate","novalidate"),this.$form.addEventListener("submit",(function(e){return e.preventDefault(),t.result=[],t.getElements(),t.promisesRemote.length?void Promise.all(t.promisesRemote).then((function(){t.promisesRemote=[],t.isValidationSuccess?t.validationSuccess():t.validationFailed()})):void(t.isValidationSuccess?t.validationSuccess():t.validationFailed())}))},isEmail:function(e){return this.REGEXP.email.test(e)},isZip:function(e){return this.REGEXP.zip.test(e)},isPhone:function(e){return this.REGEXP.phone.test(e)},isPassword:function(e){return this.REGEXP.password.test(e)},isEmpty:function(e){var t=e;return e.trim&&(t=e.trim()),!t},checkLengthMax:function(e,t){return e.length<=t},checkLengthMin:function(e,t){return e.length>=t},checkStrengthPass:function(e){return this.REGEXP.strengthPass.test(e)},getElements:function(){var e=this,t=this.$form.querySelectorAll("[data-validate-field]");this.elements=[];for(var i=function(i,n){var r=t[i],o=r.getAttribute("data-validate-field"),a=r.value,s=!1,l=[];if("checkbox"===r.type&&(a=r.checked||"",r.addEventListener("change",(function(t){var i=t.target,n={name:i.getAttribute("data-validate-field"),value:i.checked};delete e.result[n.name],e.validateItem({name:n.name,value:n.value,group:[]}),e.renderErrors()}))),"radio"===r.type){var u=e.elements.filter((function(e){if(e.name===o)return e}))[0];u?(u.group.push(r.checked),s=!0):l.push(r.checked),r.addEventListener("change",(function(t){var i=t.target,n={name:i.getAttribute("data-validate-field"),value:i.checked};delete e.result[n.name],e.validateItem({name:n.name,value:n.value,group:[]}),e.renderErrors()}))}e.setterEventListener(r,"keyup",e.handlerKeyup,"add"),s||e.elements.push({name:o,value:a,group:l})},n=0,r=t.length;n<r;++n)i(n);this.validateElements()},validateRequired:function(e){return!this.isEmpty(e)},validateEmail:function(e){return this.isEmail(e)},validatePhone:function(e){return this.isPhone(e)},validateMinLength:function(e,t){return this.checkLengthMin(e,t)},validateMaxLength:function(e,t){return this.checkLengthMax(e,t)},validateStrengthPass:function(e){return this.checkStrengthPass(e)},validatePassword:function(e){return this.isPassword(e)},validateZip:function(e){return this.isZip(e)},validateRemote:function(e){var i=e.value,n=e.name,r=e.url,o=e.successAnswer,a=e.sendParam,s=e.method;return new Promise((function(e){f({url:r,method:s,data:t({},a,i),async:!0,callback:function(t){t.toLowerCase()===o.toLowerCase()&&e("ok"),e({type:"incorrect",name:n})},error:function(){e({type:"error",name:n})}})}))},generateMessage:function(e,t,i){var n=this.messages||this.defaultMessages,r=n[t]&&n[t][e]||this.messages&&"string"==typeof this.messages[t]&&n[t]||this.defaultMessages[e]||this.DEFAULT_REMOTE_ERROR;i&&(r=r.replace(":value",i.toString())),this.result[t]={message:r}},validateElements:function(){var e=this;return this.lockForm(),this.elements.forEach((function(t){e.validateItem({name:t.name,value:t.value,group:t.group})})),this.promisesRemote.length?void Promise.all(this.promisesRemote).then((function(t){t.forEach((function(t){return"ok"===t||("error"===t.type&&alert("Server error occured. Please try later."),e.generateMessage(u,t.name)),void e.renderErrors()}))})):void this.renderErrors()},validateItem:function(e){var t=this,h=e.name,f=e.group,m=e.value,v=e.isKeyupChange,p=this.rules[h]||this.defaultRules[h]||!1;if(p)for(var g in p){var y=p[g];if(g!==n&&g!==d&&""==m)return;switch(g){case d:if("function"!=typeof y)break;if(y(h,m))break;return void this.generateMessage(d,h,y);case n:if(!y)break;if(f.length){var b=!1;if(f.forEach((function(e){t.validateRequired(e)&&(b=!0)})),b)break}else if(this.validateRequired(m))break;return void this.generateMessage(n,h);case r:if(!y)break;if(this.validateEmail(m))break;return void this.generateMessage(r,h);case o:if(!y)break;if(this.validateMinLength(m,y))break;return void this.generateMessage(o,h,y);case a:if(!y)break;if(this.validateMaxLength(m,y))break;return void this.generateMessage(a,h,y);case l:if(!y)break;if(this.validatePhone(m))break;return void this.generateMessage(l,h);case s:if(!y)break;if(this.validatePassword(m))break;return void this.generateMessage(s,h);case c:if(!y||"object"!==(void 0===y?"undefined":i(y)))break;if(y.default&&this.validateStrengthPass(m))break;if(y.custom){var _=void 0;try{_=new RegExp(y.custom)}catch(e){_=this.REGEXP.strengthPass,console.error("Custom regexp for strength rule is not valid. Default regexp was used.")}if(_.test(m))break}return void this.generateMessage(c,h);case"zip":if(!y)break;if(this.validateZip(m))break;return void this.generateMessage("zip",h);case u:if(v)break;if(!y)break;var E=y.url,w=y.successAnswer,k=y.method,S=y.sendParam,L=this.$form.querySelector('input[data-validate-field="'+h+'"]');return this.setterEventListener(L,"keyup",this.handlerKeyup,"remove"),void this.promisesRemote.push(this.validateRemote({name:h,value:m,url:E,method:k,sendParam:S,successAnswer:w}))}}},clearErrors:function(){for(var e=document.querySelectorAll(".js-validate-error-label"),t=0,i=e.length;t<i;++t)e[t].remove();for(var n=0,r=(e=document.querySelectorAll(".js-validate-error-field")).length;n<r;++n)e[n].classList.remove("js-validate-error-field"),e[n].style.border="",e[n].style.color=""},renderErrors:function(){var e=this;if(this.clearErrors(),this.unlockForm(),this.isValidationSuccess=!1,0!==Object.keys(this.result).length){for(var t in this.result){var i=this.result[t].message,n=this.$form.querySelectorAll('[data-validate-field="'+t+'"]'),r=n[n.length-1],o=document.createElement("div");if(o.innerHTML=i,o.className="js-validate-error-label",o.setAttribute("style","color: "+this.colorWrong),r.style.border="1px solid "+this.colorWrong,r.style.color=""+this.colorWrong,r.classList.add("js-validate-error-field"),"checkbox"===r.type||"radio"===r.type){var a=document.querySelector('label[for="'+r.getAttribute("id")+'"]');"label"===r.parentNode.tagName.toLowerCase()?r.parentNode.parentNode.insertBefore(o,null):a?a.parentNode.insertBefore(o,a.nextSibling):r.parentNode.insertBefore(o,r.nextSibling)}else r.parentNode.insertBefore(o,r.nextSibling)}this.tooltipSelectorWrap.length&&(this.state.tooltipsTimer=setTimeout((function(){e.hideTooltips()}),this.tooltipFadeOutTime))}else this.isValidationSuccess=!0},hideTooltips:function(){var e=this;document.querySelectorAll(".js-validate-error-label").forEach((function(t){t.classList.add(e.tooltipFadeOutClass)})),this.state.tooltipsTimer=null},lockForm:function(){for(var e=this.$form.querySelectorAll("input, textarea, button, select"),t=0,i=e.length;t<i;++t)e[t].setAttribute("disabled","disabled"),e[t].style.pointerEvents="none",e[t].style.webitFilter="grayscale(100%)",e[t].style.filter="grayscale(100%)"},unlockForm:function(){for(var e=this.$form.querySelectorAll("input, textarea, button, select"),t=0,i=e.length;t<i;++t)e[t].removeAttribute("disabled"),e[t].style.pointerEvents="",e[t].style.webitFilter="",e[t].style.filter=""}},e.JustValidate=m}(window),$(document).ready((function(){$(".header__search, .header__close").click((function(e){$(".header__input").toggleClass("header__input-show")})),$(".contacts__close").click((function(e){$(".contacts__desc").toggleClass("hide")})),$(".header__nav-tablet-btn").click((function(e){$(".menu").toggleClass("menu-active")})),$(".header__search-mobile").click((function(e){$(".header__search-mobile, .header__logo").toggleClass("hide")})),$(".header__search-mobile").click((function(e){$(".header__inp-tablet").addClass("header__inp-tablet-active")})),$(".header__close").click((function(e){$(".header__search-mobile, .header__logo").removeClass("hide")})),$(".header__close").click((function(e){$(".header__inp-tablet").toggleClass("header__inp-tablet-active")}))})),document.addEventListener("DOMContentLoaded",(function(){function e(){var e=new ymaps.Map("map",{center:[55.76963601332982,37.63668850000002],controls:[],zoom:15}),t=new ymaps.Placemark([55.770422290727126,37.6359635584614],{hintContent:"107045, Москва, Даев переулок, дом 41,<br> бизнес-центр «Даев Плаза», этаж 8, офис № 82 "},{iconLayout:"default#image",iconImageHref:"imgs/sprite.svg#ya_marker",iconImageSize:[12,12],iconImageOffset:[-3,-12]});e.geoObjects.add(t)}window.addEventListener("scroll",(function t(){document.querySelector(".contacts__left").getBoundingClientRect().top-document.documentElement.clientHeight<0&&(ymaps.ready(e),this.removeEventListener("scroll",t))}))})),new JustValidate(".about__form",{colorWrong:"#F06666",rules:{mail:{required:!0,email:!0}},messages:{email:{required:"Недопустимый формат"}}}),new JustValidate(".contacts__form",{colorWrong:"#F06666",rules:{name:{required:!0,minLength:2,maxLength:10},mail:{required:!0,email:!0}},messages:{email:{required:"Недопустимый формат"},name:{required:"Недопустимый формат"}}});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
